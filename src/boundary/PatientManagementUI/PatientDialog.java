/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package boundary.PatientManagementUI;

import enitity.Patient;
import adt.Pair;
import javax.swing.*;
import java.time.LocalDate;



/**
 *
 * @author szepi
 */
public class PatientDialog extends javax.swing.JDialog {

      private Pair<String, Patient> result;
      
    /**
     * Creates new form PatientDialog
     */
    public PatientDialog(java.awt.Frame parent, boolean modal) {
        
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent); // Center the dialog on the screen
        this.result = null; // Initialize result to null (implies cancellation if not set)
      
        
          // Initialize the JComboBox with appropriate gender options
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jComboBox1.setSelectedIndex(0); // Set default selection
        
        // Clear default text in text fields
        formNameInput.setText("");
        formAgeInput.setText("");
        formContactInput.setText("");
        formEmailInput.setText("");
        formAddressInput.setText("");
        formDateOfRegInput.setText(LocalDate.now().toString());
        formDateOfRegInput.setEditable(false);


        
        setTitle("Register New Patient");
    }
    
    /**
     * Public method to retrieve the result (Patient ID and Patient object).
     * @return A Pair<String, Patient> if saved, null if cancelled.
     */
    
      public Pair<String, Patient> getResult() {
        return result;
    }
      
    
   private void savePatientAction(java.awt.event.ActionEvent evt) {
    // 1. Get trimmed text from all input fields
    String name = formNameInput.getText().trim();
    String ageStr = formAgeInput.getText().trim();
    String ic = formICNoInput.getText().trim();
    String gender = (String) jComboBox1.getSelectedItem();
    String contact = formContactInput.getText().trim();
    String email = formEmailInput.getText().trim();
    String address = formAddressInput.getText().trim();
    String date = formDateOfRegInput.getText().trim();

    // StringBuilder to collect all error messages
    StringBuilder errors = new StringBuilder();

    // 1. Check for empty fields
    if (name.isEmpty() || ageStr.isEmpty() || ic.isEmpty() ||
        gender == null || gender.isEmpty() || contact.isEmpty() ||
        email.isEmpty() || address.isEmpty() || date.isEmpty()) {
        errors.append("• Please fill in all fields.\n");
    }

    // 2. Name validation
    if (!name.matches("^[A-Za-z ]+$")) {
        errors.append("• Name must contain only alphabets and spaces.\n");
    }

    // 3. IC format validation
    if (!ic.matches("^\\d{6}-\\d{2}-\\d{4}$")) {
        errors.append("• IC must be in format XXXXXX-XX-XXXX with only digits.\n");
    }

    // 4. Age validation
    try {
        int age = Integer.parseInt(ageStr);
        if (age <= 0) {
            errors.append("• Age must be greater than 0.\n");
        }
    } catch (NumberFormatException ex) {
        errors.append("• Age must be a valid number.\n");
    }

    // 5. Phone validation
    if (!contact.matches("^\\d+$")) {
        errors.append("• Phone number must contain only digits.\n");
    }

    // 6. Email validation
    if (!email.matches("^[A-Za-z0-9._%+-]+@gmail\\.com$")) {
        errors.append("• Email must be a valid Gmail address ending with @gmail.com.\n");
    }

    // Show all collected errors if any
    if (errors.length() > 0) {
        JOptionPane.showMessageDialog(this, errors.toString(), "Input Errors", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // 7. If validation passes → create Patient
    try {
        Patient newPatient = new Patient();
        newPatient.setPatientName(name);
        newPatient.setPatientAge(Integer.parseInt(ageStr));
        newPatient.setPatientIC(ic);
        newPatient.setGender(gender);
        newPatient.setContact(contact);
        newPatient.setEmail(email);
        newPatient.setAddress(address);
        newPatient.setDateOfRegistration(date);

        this.result = new Pair<>(newPatient.getPatientID(), newPatient);
        dispose();
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error creating patient data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}


   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        formWrapperPanel = new javax.swing.JPanel();
        formGridPanel = new javax.swing.JPanel();
        formNameLabel = new javax.swing.JLabel();
        formNameInput = new javax.swing.JTextField();
        formICNoLabel = new javax.swing.JLabel();
        formICNoInput = new javax.swing.JTextField();
        formAgeLabel = new javax.swing.JLabel();
        formAgeInput = new javax.swing.JTextField();
        formGenderLabel = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        formContactLabel = new javax.swing.JLabel();
        formContactInput = new javax.swing.JTextField();
        formEmailLabel = new javax.swing.JLabel();
        formEmailInput = new javax.swing.JTextField();
        formAddressLabel = new javax.swing.JLabel();
        formAddressInput = new javax.swing.JTextField();
        formDateOfRegLabel = new javax.swing.JLabel();
        formDateOfRegInput = new javax.swing.JTextField();
        buttonPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        logoPanel.setLayout(new java.awt.BorderLayout());
        logoPanel.add(logoLabel, java.awt.BorderLayout.PAGE_START);

        titlePanel.setLayout(new java.awt.BorderLayout());

        titleLabel.setFont(new java.awt.Font("Corbel", 1, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Patient Registration Form");
        titleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        titlePanel.add(titleLabel, java.awt.BorderLayout.PAGE_START);

        formGridPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        formGridPanel.setAlignmentX(1.0F);
        formGridPanel.setAlignmentY(1.0F);
        formGridPanel.setLayout(new java.awt.GridLayout(8, 2, 5, 15));

        formNameLabel.setText("Patient Name :");
        formGridPanel.add(formNameLabel);

        formNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formNameInputActionPerformed(evt);
            }
        });
        formGridPanel.add(formNameInput);

        formICNoLabel.setText("Patient IC No :");
        formGridPanel.add(formICNoLabel);

        formICNoInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formICNoInputActionPerformed(evt);
            }
        });
        formGridPanel.add(formICNoInput);

        formAgeLabel.setText("Patient Age :");
        formGridPanel.add(formAgeLabel);

        formAgeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formAgeInputActionPerformed(evt);
            }
        });
        formGridPanel.add(formAgeInput);

        formGenderLabel.setText("Patient Gender :");
        formGridPanel.add(formGenderLabel);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        formGridPanel.add(jComboBox1);

        formContactLabel.setText("Patient Phone No. :");
        formGridPanel.add(formContactLabel);

        formContactInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formContactInputActionPerformed(evt);
            }
        });
        formGridPanel.add(formContactInput);

        formEmailLabel.setText("Patient Email :");
        formGridPanel.add(formEmailLabel);

        formEmailInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formEmailInputActionPerformed(evt);
            }
        });
        formGridPanel.add(formEmailInput);

        formAddressLabel.setText("Patient Address :");
        formGridPanel.add(formAddressLabel);

        formAddressInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formAddressInputActionPerformed(evt);
            }
        });
        formGridPanel.add(formAddressInput);

        formDateOfRegLabel.setText("Patient Date of Registration :");
        formGridPanel.add(formDateOfRegLabel);

        formDateOfRegInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formDateOfRegInputActionPerformed(evt);
            }
        });
        formGridPanel.add(formDateOfRegInput);

        formWrapperPanel.add(formGridPanel);
        formGridPanel.getAccessibleContext().setAccessibleName("Patient Information :");

        titlePanel.add(formWrapperPanel, java.awt.BorderLayout.CENTER);

        logoPanel.add(titlePanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(logoPanel, java.awt.BorderLayout.CENTER);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(saveButton)
                .addGap(45, 45, 45)
                .addComponent(cancelButton)
                .addContainerGap(284, Short.MAX_VALUE))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formContactInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formContactInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formContactInputActionPerformed

    private void formEmailInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formEmailInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formEmailInputActionPerformed

    private void formAddressInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formAddressInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formAddressInputActionPerformed

    private void formDateOfRegInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formDateOfRegInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formDateOfRegInputActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        savePatientAction(evt);
    }//GEN-LAST:event_saveButtonActionPerformed
 
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.result = null; // Set result to null to indicate cancellation
        this.dispose(); // Close the dialog
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void formNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formNameInputActionPerformed

    private void formAgeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formAgeInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formAgeInputActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void formICNoInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formICNoInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formICNoInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PatientDialog dialog = new PatientDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField formAddressInput;
    private javax.swing.JLabel formAddressLabel;
    private javax.swing.JTextField formAgeInput;
    private javax.swing.JLabel formAgeLabel;
    private javax.swing.JTextField formContactInput;
    private javax.swing.JLabel formContactLabel;
    private javax.swing.JTextField formDateOfRegInput;
    private javax.swing.JLabel formDateOfRegLabel;
    private javax.swing.JTextField formEmailInput;
    private javax.swing.JLabel formEmailLabel;
    private javax.swing.JLabel formGenderLabel;
    private javax.swing.JPanel formGridPanel;
    private javax.swing.JTextField formICNoInput;
    private javax.swing.JLabel formICNoLabel;
    private javax.swing.JTextField formNameInput;
    private javax.swing.JLabel formNameLabel;
    private javax.swing.JPanel formWrapperPanel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPanel logoPanel;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables
}
