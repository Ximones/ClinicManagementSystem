/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package boundary.MedicalTreatmentManagementUI;

import adt.DoublyLinkedList;
import adt.Pair;
import control.TreatmentController.TreatmentControl;
import control.TreatmentController.TreatmentEditControl;
import enitity.Treatment;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import utility.ImageUtils;

/**
 * A dialog for editing an existing treatment record.
 * @author Tan Jun Yew
 */
public class TreatmentEditDialog extends javax.swing.JDialog {

    private final TreatmentEditControl control;

    public TreatmentEditDialog(java.awt.Frame parent, boolean modal, TreatmentControl treatmentControl) {
        super(parent, modal);
        initComponents();
        logoLabel = ImageUtils.getImageLabel("tarumt_logo.png", logoLabel);
        setLocationRelativeTo(parent);
        
        // Initialize the controller
        this.control = new TreatmentEditControl(treatmentControl);
        
        // Setup UI components
        setupComponents();
        setFieldsEditable(false);
    }
    
    private void setupComponents() {
        // Get treatment types from the controller
        DoublyLinkedList<Pair<String, Double>> treatmentTypes = control.getTreatmentTypes();
        
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("-- Select Treatment Type --");
        for (Pair<String, Double> pair : treatmentTypes) {
            model.addElement(pair.getKey() + String.format(" (RM %.2f)", pair.getValue()));
        }
        treatmentTypeComboBox.setModel(model);

        // ID should never be editable from the edit dialog
        treatmentIdField.setEditable(false);
    }

    public void setFieldsEditable(boolean editable) {
        diagnosisInput.setEditable(editable);
        treatmentTypeComboBox.setEnabled(editable);
        notesInput.setEditable(editable);
        saveButton.setEnabled(editable);
    }

    public void displayTreatmentInfo(Treatment treatment) {
        treatmentIdField.setText(treatment.getTreatmentID());
        diagnosisInput.setText(treatment.getDiagnosis());
        notesInput.setText(treatment.getNotes());
        
        // Find and select the matching treatment type in the combo box
        for (int i = 1; i < treatmentTypeComboBox.getItemCount(); i++) {
            String item = (String) treatmentTypeComboBox.getItemAt(i);
            if (item.startsWith(treatment.getTreatmentDetails())) {
                treatmentTypeComboBox.setSelectedIndex(i);
                break;
            }
        }
    }

    public void clearForm() {
        treatmentIdField.setText("");
        diagnosisInput.setText("");
        notesInput.setText("");
        treatmentTypeComboBox.setSelectedIndex(0);
    }

    // Getters for the controller to retrieve form data
    public String getDiagnosis() {
        return diagnosisInput.getText().trim();
    }

    public String getTreatmentDetails() {
        int treatmentTypeIndex = treatmentTypeComboBox.getSelectedIndex();
        if (treatmentTypeIndex <= 0) {
            return null;
        }
        
        DoublyLinkedList<Pair<String, Double>> treatmentTypes = control.getTreatmentTypes();
        Pair<String, Double> selectedTreatmentPair = treatmentTypes.getElement(treatmentTypeIndex).getEntry();
        return selectedTreatmentPair.getKey();
    }

    public double getCost() {
        int treatmentTypeIndex = treatmentTypeComboBox.getSelectedIndex();
        if (treatmentTypeIndex <= 0) {
            return 0.0;
        }
        
        DoublyLinkedList<Pair<String, Double>> treatmentTypes = control.getTreatmentTypes();
        Pair<String, Double> selectedTreatmentPair = treatmentTypes.getElement(treatmentTypeIndex).getEntry();
        return selectedTreatmentPair.getValue();
    }

    public String getNotes() {
        return notesInput.getText().trim();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        titlePanel = new javax.swing.JPanel();
        getContentPane = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        searchInput = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        treatmentLabel = new javax.swing.JLabel();
        treatmentIdField = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        diagnosisLabel = new javax.swing.JLabel();
        diagnosisInput = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        treatmentDetailsLabel = new javax.swing.JLabel();
        treatmentTypeComboBox = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        diagnosisLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        notesInput = new javax.swing.JTextArea();
        buttonPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 500));

        logoPanel.setLayout(new java.awt.BorderLayout());
        logoPanel.add(logoLabel, java.awt.BorderLayout.CENTER);

        titlePanel.setLayout(new java.awt.BorderLayout());

        getContentPane.setLayout(new java.awt.BorderLayout());

        searchLabel.setText("Enter Treatment ID to Edit:");
        searchPanel.add(searchLabel);

        searchInput.setColumns(15);
        searchInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchInputActionPerformed(evt);
            }
        });
        searchPanel.add(searchInput);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        searchPanel.add(searchButton);

        getContentPane.add(searchPanel, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.BorderLayout(5, 0));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Treatmentï¼š"));
        jPanel2.setPreferredSize(new java.awt.Dimension(600, 280));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel9.setPreferredSize(new java.awt.Dimension(600, 250));
        jPanel9.setVerifyInputWhenFocusTarget(false);

        jPanel5.setMinimumSize(new java.awt.Dimension(50, 100));
        jPanel5.setPreferredSize(new java.awt.Dimension(600, 500));
        jPanel5.setLayout(new java.awt.BorderLayout());

        treatmentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        treatmentLabel.setText("ID :");
        treatmentLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        treatmentLabel.setMinimumSize(new java.awt.Dimension(100, 100));
        treatmentLabel.setPreferredSize(new java.awt.Dimension(150, 30));
        jPanel12.add(treatmentLabel);

        treatmentIdField.setPreferredSize(new java.awt.Dimension(150, 30));
        treatmentIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentIdFieldActionPerformed(evt);
            }
        });
        jPanel12.add(treatmentIdField);

        jPanel5.add(jPanel12, java.awt.BorderLayout.NORTH);

        jPanel13.setMinimumSize(new java.awt.Dimension(300, 500));
        jPanel13.setLayout(new java.awt.BorderLayout());

        diagnosisLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        diagnosisLabel.setText("Diagnose :");
        diagnosisLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        diagnosisLabel.setMinimumSize(new java.awt.Dimension(100, 100));
        diagnosisLabel.setPreferredSize(new java.awt.Dimension(150, 30));
        diagnosisLabel.setRequestFocusEnabled(false);
        jPanel6.add(diagnosisLabel);

        diagnosisInput.setPreferredSize(new java.awt.Dimension(150, 30));
        jPanel6.add(diagnosisInput);

        jPanel13.add(jPanel6, java.awt.BorderLayout.PAGE_START);

        jPanel7.setPreferredSize(new java.awt.Dimension(100, 200));
        jPanel7.setLayout(new java.awt.BorderLayout());

        treatmentDetailsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        treatmentDetailsLabel.setText("Treatment Type :");
        treatmentDetailsLabel.setPreferredSize(new java.awt.Dimension(150, 30));
        jPanel11.add(treatmentDetailsLabel);

        treatmentTypeComboBox.setPreferredSize(new java.awt.Dimension(150, 30));
        treatmentTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentTypeComboBoxActionPerformed(evt);
            }
        });
        jPanel11.add(treatmentTypeComboBox);

        jPanel7.add(jPanel11, java.awt.BorderLayout.NORTH);

        jPanel8.setLayout(new java.awt.BorderLayout());

        jPanel10.setMaximumSize(new java.awt.Dimension(300, 300));
        jPanel10.setMinimumSize(new java.awt.Dimension(300, 300));
        jPanel10.setPreferredSize(new java.awt.Dimension(200, 130));

        diagnosisLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        diagnosisLabel1.setText("Notes :");
        diagnosisLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        diagnosisLabel1.setMinimumSize(new java.awt.Dimension(100, 100));
        diagnosisLabel1.setPreferredSize(new java.awt.Dimension(150, 30));
        diagnosisLabel1.setRequestFocusEnabled(false);
        jPanel10.add(diagnosisLabel1);

        notesInput.setColumns(14);
        notesInput.setRows(5);
        jScrollPane2.setViewportView(notesInput);

        jPanel10.add(jScrollPane2);

        jPanel8.add(jPanel10, java.awt.BorderLayout.NORTH);

        jPanel7.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel13.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel9.add(jPanel5);

        jPanel2.add(jPanel9, java.awt.BorderLayout.NORTH);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane.add(jPanel1, java.awt.BorderLayout.CENTER);

        titlePanel.add(getContentPane, java.awt.BorderLayout.CENTER);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(saveButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        titlePanel.add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        logoPanel.add(titlePanel, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(logoPanel, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String diagnosis = getDiagnosis();
        String details = getTreatmentDetails();
        double cost = getCost();
        String notes = getNotes();
        control.TreatmentController.TreatmentEditControl.OperationResult result = control.saveTreatmentChanges(diagnosis, details, cost, notes);
        if (result.success) {
            JOptionPane.showMessageDialog(this, result.message, "Success", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, result.message, "Validation Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose(); // Simply close the dialog
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String idToSearch = searchInput.getText();
        Treatment found = control.searchTreatmentById(idToSearch);
        if (found != null) {
            displayTreatmentInfo(found);
            setFieldsEditable(true);
        } else {
            JOptionPane.showMessageDialog(this, "Treatment with ID '" + idToSearch + "' not found.", "Not Found", JOptionPane.WARNING_MESSAGE);
            setFieldsEditable(false);
            clearForm();
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchInputActionPerformed

    private void treatmentIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_treatmentIdFieldActionPerformed

    private void treatmentTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_treatmentTypeComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField diagnosisInput;
    private javax.swing.JLabel diagnosisLabel;
    private javax.swing.JLabel diagnosisLabel1;
    private javax.swing.JPanel getContentPane;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPanel logoPanel;
    private javax.swing.JTextArea notesInput;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchInput;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JLabel treatmentDetailsLabel;
    private javax.swing.JTextField treatmentIdField;
    private javax.swing.JLabel treatmentLabel;
    private javax.swing.JComboBox<String> treatmentTypeComboBox;
    // End of variables declaration//GEN-END:variables
}
