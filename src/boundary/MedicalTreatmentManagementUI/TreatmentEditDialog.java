/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package boundary.MedicalTreatmentManagementUI;

import adt.DoublyLinkedList;
import adt.Pair;
import control.TreatmentController.TreatmentControl;
import enitity.Treatment;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import utility.ImageUtils;

/**
 * A dialog for editing an existing treatment record.
 * @author User
 */
public class TreatmentEditDialog extends javax.swing.JDialog {

    private TreatmentControl treatmentControl;
    private Treatment treatmentToEdit;
    private DoublyLinkedList<Pair<String, Double>> treatmentTypes = new DoublyLinkedList<>();

    public TreatmentEditDialog(java.awt.Frame parent, boolean modal, TreatmentControl control) {
        super(parent, modal);
        this.treatmentControl = control;
        initComponents();
        logoLabel = ImageUtils.getImageLabel("tarumt_logo.png", logoLabel);
        setLocationRelativeTo(parent);
        
        initializeTreatmentTypes();
        setFieldsEditable(false);
    }
    
    private void initializeTreatmentTypes() {
        treatmentTypes.insertLast(new Pair<>("Standard Consultation", 30.00));
        treatmentTypes.insertLast(new Pair<>("Minor Wound Dressing", 50.00));
        treatmentTypes.insertLast(new Pair<>("Vaccination Shot", 80.00));
        treatmentTypes.insertLast(new Pair<>("Blood Test", 120.00));
        treatmentTypes.insertLast(new Pair<>("Specialist Referral", 20.00));
        
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("-- Select Treatment Type --");
        for (Pair<String, Double> pair : treatmentTypes) {
            model.addElement(pair.getKey() + String.format(" (RM %.2f)", pair.getValue()));
        }
        treatmentTypeComboBox.setModel(model);
    }

    private void setFieldsEditable(boolean editable) {
        diagnosisInput.setEditable(editable);
        treatmentTypeComboBox.setEnabled(editable);
        notesInput.setEditable(editable);
        saveButton.setEnabled(editable);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        titlePanel = new javax.swing.JPanel();
        getContentPane = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        searchInput = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        formWrapperPanel = new javax.swing.JPanel();
        formGridPanel = new javax.swing.JPanel();
        treatmentIdLabel = new javax.swing.JLabel();
        treatmentIdField = new javax.swing.JTextField();
        diagnosisLabel = new javax.swing.JLabel();
        diagnosisInput = new javax.swing.JTextField();
        treatmentDetailsLabel = new javax.swing.JLabel();
        treatmentTypeComboBox = new javax.swing.JComboBox<>();
        notesLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        notesInput = new javax.swing.JTextArea();
        buttonPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 500));

        logoPanel.setLayout(new java.awt.BorderLayout());
        logoPanel.add(logoLabel, java.awt.BorderLayout.CENTER);

        titlePanel.setLayout(new java.awt.BorderLayout());

        getContentPane.setLayout(new java.awt.BorderLayout());

        searchLabel.setText("Enter Treatment ID to Edit:");
        searchPanel.add(searchLabel);

        searchInput.setColumns(15);
        searchInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchInputActionPerformed(evt);
            }
        });
        searchPanel.add(searchInput);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        searchPanel.add(searchButton);

        getContentPane.add(searchPanel, java.awt.BorderLayout.PAGE_START);

        formGridPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Treatment Information :", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Corbel", 1, 14))); // NOI18N
        formGridPanel.setMinimumSize(new java.awt.Dimension(350, 228));
        formGridPanel.setPreferredSize(new java.awt.Dimension(300, 270));
        formGridPanel.setLayout(new java.awt.GridLayout(4, 2, 5, 15));

        treatmentIdLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        treatmentIdLabel.setText("ID :");
        formGridPanel.add(treatmentIdLabel);

        treatmentIdField.setEditable(false);
        treatmentIdField.setColumns(15);
        treatmentIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentIdFieldActionPerformed(evt);
            }
        });
        formGridPanel.add(treatmentIdField);

        diagnosisLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        diagnosisLabel.setText("Diagnosis :");
        formGridPanel.add(diagnosisLabel);

        diagnosisInput.setColumns(15);
        formGridPanel.add(diagnosisInput);

        treatmentDetailsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        treatmentDetailsLabel.setText("Type :");
        formGridPanel.add(treatmentDetailsLabel);

        formGridPanel.add(treatmentTypeComboBox);

        notesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notesLabel.setText("Notes :");
        formGridPanel.add(notesLabel);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        notesInput.setColumns(20);
        notesInput.setRows(5);
        jScrollPane2.setViewportView(notesInput);

        formGridPanel.add(jScrollPane2);

        formWrapperPanel.add(formGridPanel);

        getContentPane.add(formWrapperPanel, java.awt.BorderLayout.CENTER);

        titlePanel.add(getContentPane, java.awt.BorderLayout.CENTER);

        logoPanel.add(titlePanel, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(logoPanel, java.awt.BorderLayout.PAGE_START);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(saveButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_END);
        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (treatmentToEdit == null) return;

        StringBuilder errors = new StringBuilder();
        String diagnosis = diagnosisInput.getText().trim().toLowerCase();
        int treatmentTypeIndex = treatmentTypeComboBox.getSelectedIndex();

        if (diagnosis.isEmpty()) {
            errors.append("- Diagnosis cannot be empty.\n");
        }
        if (treatmentTypeIndex <= 0) {
            errors.append("- Please select a treatment type.\n");
        }
        
        if (errors.length() > 0) {
            JOptionPane.showMessageDialog(this, errors.toString(), "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Pair<String, Double> selectedTreatmentPair = treatmentTypes.getElement(treatmentTypeIndex).getEntry();
        String newDetails = selectedTreatmentPair.getKey();
        double newCost = selectedTreatmentPair.getValue();
        String newNotes = notesInput.getText().trim();

        treatmentToEdit.setDiagnosis(diagnosis);
        treatmentToEdit.setTreatmentDetails(newDetails);
        treatmentToEdit.setCost(newCost);
        treatmentToEdit.setNotes(newNotes);

        treatmentControl.updateTreatment();
        
        JOptionPane.showMessageDialog(this, "Treatment " + treatmentToEdit.getTreatmentID() + " updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
        this.dispose();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose(); // Simply close the dialog
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String idToSearch = searchInput.getText().trim().toUpperCase();
        if (idToSearch.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a Treatment ID.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // **FIX**: Create a new control instance to load the latest data from the file.
        this.treatmentControl = new TreatmentControl();
        treatmentToEdit = treatmentControl.findTreatmentById(idToSearch);

        if (treatmentToEdit != null) {
            treatmentIdField.setText(treatmentToEdit.getTreatmentID());
            diagnosisInput.setText(treatmentToEdit.getDiagnosis());
            notesInput.setText(treatmentToEdit.getNotes());
            
            // Find and select the matching treatment type in the combo box
            for (int i = 1; i < treatmentTypeComboBox.getItemCount(); i++) {
                String item = (String) treatmentTypeComboBox.getItemAt(i);
                if (item.startsWith(treatmentToEdit.getTreatmentDetails())) {
                    treatmentTypeComboBox.setSelectedIndex(i);
                    break;
                }
            }
            
            setFieldsEditable(true);
        } else {
            JOptionPane.showMessageDialog(this, "Treatment with ID '" + idToSearch + "' not found.", "Not Found", JOptionPane.WARNING_MESSAGE);
            setFieldsEditable(false);
            // Clear fields if not found
            treatmentIdField.setText("");
            diagnosisInput.setText("");
            notesInput.setText("");
            treatmentTypeComboBox.setSelectedIndex(0);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchInputActionPerformed

    private void treatmentIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_treatmentIdFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField diagnosisInput;
    private javax.swing.JLabel diagnosisLabel;
    private javax.swing.JPanel formGridPanel;
    private javax.swing.JPanel formWrapperPanel;
    private javax.swing.JPanel getContentPane;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPanel logoPanel;
    private javax.swing.JTextArea notesInput;
    private javax.swing.JLabel notesLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchInput;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JLabel treatmentDetailsLabel;
    private javax.swing.JTextField treatmentIdField;
    private javax.swing.JLabel treatmentIdLabel;
    private javax.swing.JComboBox<String> treatmentTypeComboBox;
    // End of variables declaration//GEN-END:variables
}
