/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package boundary.MedicalTreatmentManagementUI;

import adt.DoublyLinkedList;

import adt.Pair;
import boundary.MainFrame;
import control.TreatmentControl;
import enitity.Consultation;
import enitity.Treatment;
import java.util.Iterator;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import utility.FileUtils;
import utility.ImageUtils;

/**
 *
 * @author User
 */
public class DiagnosisEntryPanel extends javax.swing.JPanel {
    private MainFrame mainFrame;
    private TreatmentControl treatmentControl = new TreatmentControl();
    private DoublyLinkedList<Pair<String, Consultation>> consultationList;
    private DoublyLinkedList<Pair<String, Double>> treatmentTypes = new DoublyLinkedList<>();

    public DiagnosisEntryPanel(MainFrame mainFrame) {
        this.mainFrame = mainFrame;
        initComponents();
        logoLabel = ImageUtils.getImageLabel("tarumt_logo.png", logoLabel);
        initializeTreatmentTypes();
        loadConsultations();
        updateRecentTreatmentsDisplay();
    }
    
    private void initializeTreatmentTypes() {
        treatmentTypes.insertLast(new Pair<>("Standard Consultation", 30.00));
        treatmentTypes.insertLast(new Pair<>("Minor Wound Dressing", 50.00));
        treatmentTypes.insertLast(new Pair<>("Vaccination Shot", 80.00));
        treatmentTypes.insertLast(new Pair<>("Blood Test", 120.00));
        treatmentTypes.insertLast(new Pair<>("Specialist Referral", 20.00));
        
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("-- Select Treatment Type --");
        for (Pair<String, Double> pair : treatmentTypes) {
            model.addElement(pair.getKey() + String.format(" (RM %.2f)", pair.getValue()));
        }
        treatmentTypeComboBox.setModel(model);
    }

    public void loadConsultations() {
        consultationList = (DoublyLinkedList<Pair<String, Consultation>>) FileUtils.readDataFromFile("consultations");
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("-- Select a Consultation --");
        if (consultationList != null) {
            for (Pair<String, Consultation> pair : consultationList) {
                Consultation c = pair.getValue();
                if ("Scheduled".equalsIgnoreCase(c.getStatus())) {
                    String displayText = c.getConsultationID() + " - " + c.getPatient().getPatientName();
                    model.addElement(displayText);
                }
            }
        }
        consultationComboBox.setModel(model);
    }
    
    private void clearForm() {
        consultationComboBox.setSelectedIndex(0);
        treatmentTypeComboBox.setSelectedIndex(0);
        diagnosisInput.setText("");
        notesInput.setText("");
        diagnosisInput.requestFocus();
    }
    
    private void updateRecentTreatmentsDisplay() {
        DefaultListModel<String> model = new DefaultListModel<>();
        DoublyLinkedList<Treatment> recentList = treatmentControl.getRecentTreatmentsList();
        if (recentList.isEmpty()) {
            model.addElement("No treatments added this session.");
        } else {
            for (Treatment t : recentList) {
                model.addElement(t.getTreatmentID() + ": " + t.getDiagnosis() + " for " + t.getConsultation().getPatient().getPatientName());
            }
        }
        recentTreatmentsList.setModel(model);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoLabel = new javax.swing.JLabel();
        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        contentPanel = new javax.swing.JPanel();
        formWrapperPanel = new javax.swing.JPanel();
        formGridPanel = new javax.swing.JPanel();
        consultationLabel = new javax.swing.JLabel();
        consultationComboBox = new javax.swing.JComboBox<>();
        diagnosisLabel = new javax.swing.JLabel();
        diagnosisInput = new javax.swing.JTextField();
        treatmentDetailsLabel = new javax.swing.JLabel();
        treatmentTypeComboBox = new javax.swing.JComboBox<>();
        notesLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        notesInput = new javax.swing.JTextArea();
        recentPanel = new javax.swing.JPanel();
        recentAdded = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        recentTreatmentsList = new javax.swing.JList<>();
        buttonPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());
        add(logoLabel, java.awt.BorderLayout.PAGE_START);

        titlePanel.setLayout(new java.awt.BorderLayout());

        titleLabel.setFont(new java.awt.Font("Corbel", 1, 36)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Diagnosis and Treatment Entry");
        titleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        titlePanel.add(titleLabel, java.awt.BorderLayout.PAGE_START);

        contentPanel.setLayout(new java.awt.GridLayout(2, 0));

        formWrapperPanel.setLayout(new java.awt.BorderLayout());

        formGridPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        formGridPanel.setAlignmentX(1.0F);
        formGridPanel.setAlignmentY(1.0F);
        formGridPanel.setLayout(new java.awt.GridLayout(4, 2, 10, 5));

        consultationLabel.setText("Select Consultation:");
        formGridPanel.add(consultationLabel);

        consultationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultationComboBoxActionPerformed(evt);
            }
        });
        formGridPanel.add(consultationComboBox);

        diagnosisLabel.setText("Diagnosis:");
        formGridPanel.add(diagnosisLabel);

        diagnosisInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagnosisInputActionPerformed(evt);
            }
        });
        formGridPanel.add(diagnosisInput);

        treatmentDetailsLabel.setText("Treatment Type:");
        formGridPanel.add(treatmentDetailsLabel);

        formGridPanel.add(treatmentTypeComboBox);

        notesLabel.setText("Notes :");
        formGridPanel.add(notesLabel);

        notesInput.setColumns(20);
        notesInput.setRows(5);
        jScrollPane2.setViewportView(notesInput);

        formGridPanel.add(jScrollPane2);

        formWrapperPanel.add(formGridPanel, java.awt.BorderLayout.CENTER);

        contentPanel.add(formWrapperPanel);

        recentPanel.setPreferredSize(new java.awt.Dimension(131, 36));
        recentPanel.setLayout(new java.awt.BorderLayout());

        recentAdded.setText(" Recently Added (This Session)");
        recentPanel.add(recentAdded, java.awt.BorderLayout.PAGE_START);

        jScrollPane3.setPreferredSize(new java.awt.Dimension(50, 50));

        jScrollPane3.setViewportView(recentTreatmentsList);

        recentPanel.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        contentPanel.add(recentPanel);

        titlePanel.add(contentPanel, java.awt.BorderLayout.CENTER);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(saveButton);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(clearButton);

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(refreshButton);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(backButton);

        titlePanel.add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        add(titlePanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void diagnosisInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagnosisInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diagnosisInputActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
       StringBuilder errors = new StringBuilder();
        
        int consultationIndex = consultationComboBox.getSelectedIndex();
        if (consultationIndex <= 0) {
            errors.append("- Please select a consultation.\n");
        }

        int treatmentTypeIndex = treatmentTypeComboBox.getSelectedIndex();
        if (treatmentTypeIndex <= 0) {
            errors.append("- Please select a treatment type.\n");
        }

        String diagnosis = diagnosisInput.getText().trim();
        if (diagnosis.isEmpty()) {
            errors.append("- Diagnosis field cannot be empty.\n");
        }
        
        if (errors.length() > 0) {
            JOptionPane.showMessageDialog(this, errors.toString(), "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String selectedConsultationText = (String) consultationComboBox.getSelectedItem();
        String consultationId = selectedConsultationText.split(" - ")[0];
        Consultation selectedConsultation = null;
        for(Pair<String, Consultation> pair : consultationList) {
            if(pair.getKey().equals(consultationId)) {
                selectedConsultation = pair.getValue();
                break;
            }
        }

        // Get selected treatment and its fixed price
        Pair<String, Double> selectedTreatmentPair = treatmentTypes.getElement(treatmentTypeIndex).getEntry();
        String treatmentDetails = selectedTreatmentPair.getKey();
        double cost = selectedTreatmentPair.getValue();
        String notes = notesInput.getText().trim();

        treatmentControl.addTreatment(selectedConsultation, diagnosis, treatmentDetails, cost, notes);
        
        if (selectedConsultation != null) {
            selectedConsultation.setStatus("Completed");
            FileUtils.writeDataToFile("consultations", consultationList);
        }

        JOptionPane.showMessageDialog(this, "Treatment record saved successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

        clearForm();
        loadConsultations();
        updateRecentTreatmentsDisplay();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        mainFrame.showPanel("medicalManagement");
    }//GEN-LAST:event_backButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        loadConsultations();
        updateRecentTreatmentsDisplay();
        JOptionPane.showMessageDialog(this, "Data has been refreshed.", "Refresh Complete", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void consultationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultationComboBoxActionPerformed
        int selectedIndex = consultationComboBox.getSelectedIndex();
        if (selectedIndex <= 0) {
            diagnosisInput.setText("");
            return;
        }

        String selectedText = (String) consultationComboBox.getSelectedItem();
        String consultationId = selectedText.split(" - ")[0];
        
        Consultation selectedConsultation = null;
        for(Pair<String, Consultation> pair : consultationList) {
            if(pair.getKey().equals(consultationId)) {
                selectedConsultation = pair.getValue();
                break;
            }
        }

        if (selectedConsultation != null && selectedConsultation.getDiagnosis() != null) {
            diagnosisInput.setText(selectedConsultation.getDiagnosis());
        } else {
            diagnosisInput.setText("");
        }
    }//GEN-LAST:event_consultationComboBoxActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clearForm();
    }//GEN-LAST:event_clearButtonActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox<String> consultationComboBox;
    private javax.swing.JLabel consultationLabel;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JTextField diagnosisInput;
    private javax.swing.JLabel diagnosisLabel;
    private javax.swing.JPanel formGridPanel;
    private javax.swing.JPanel formWrapperPanel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JTextArea notesInput;
    private javax.swing.JLabel notesLabel;
    private javax.swing.JLabel recentAdded;
    private javax.swing.JPanel recentPanel;
    private javax.swing.JList<String> recentTreatmentsList;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JLabel treatmentDetailsLabel;
    private javax.swing.JComboBox<String> treatmentTypeComboBox;
    // End of variables declaration//GEN-END:variables
}
