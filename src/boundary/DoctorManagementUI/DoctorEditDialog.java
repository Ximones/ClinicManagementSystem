/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package boundary.DoctorManagementUI;

import adt.DoublyLinkedList;
import adt.Pair;
import enitity.Doctor;
import java.awt.Frame;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import utility.FileUtils;
import utility.ImageUtils;

/**
 *
 * @author Chok Chun Fai
 */
public class DoctorEditDialog extends javax.swing.JDialog {

    // This variable will hold the new doctor if "Save" is clicked.
    private DoublyLinkedList<Pair<String, Doctor>> masterDoctorList;
    private Doctor doctorToEdit = null; // To store the found doctor

    /**
     * Creates new form DoctorDialog
     *
     * @param parent
     * @param modal
     * @param doctorList
     */
    public DoctorEditDialog(Frame parent, boolean modal, DoublyLinkedList<Pair<String, Doctor>> doctorList) {
        super(parent, modal);
        this.masterDoctorList = doctorList; // Store the master list
        initComponents();
        logoLabel = ImageUtils.getImageLabel("tarumt_logo.png", logoLabel);

        // Populate the position combo box
        DoublyLinkedList<String> position = new DoublyLinkedList<>();
        position.insertLast("Consultant");
        position.insertLast("Doctor");
        position.insertLast("Internship");
        for (String i : position) {
            formPositionBox.addItem(i);
        }

        DoublyLinkedList<String> status = new DoublyLinkedList<>();
        status.insertLast("Present");
        status.insertLast("Absent");
        status.insertLast("Resigned");

        for (String i : status) {
            formStatusBox.addItem(i);
        }
        this.setLocationRelativeTo(parent);

        // Disable form fields and save button until a doctor is found
        setFieldsEditable(false);
    }

    private void setFieldsEditable(boolean editable) {
        formNameInput.setEditable(editable);
        formAgeInput.setEditable(editable);
        formPhoneInput.setEditable(editable);
        formPositionBox.setEnabled(editable);
        formStatusBox.setEnabled(editable);
        saveButton.setEnabled(editable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        titlePanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        formWrapperPanel = new javax.swing.JPanel();
        formGridPanel = new javax.swing.JPanel();
        formDocIDlabel = new javax.swing.JLabel();
        formDocIDfield = new javax.swing.JTextField();
        formNameLabel = new javax.swing.JLabel();
        formNameInput = new javax.swing.JTextField();
        formAgeLabel = new javax.swing.JLabel();
        formAgeInput = new javax.swing.JTextField();
        formPhoneLabel = new javax.swing.JLabel();
        formPhoneInput = new javax.swing.JTextField();
        formPositionLabel = new javax.swing.JLabel();
        formPositionBox = new javax.swing.JComboBox<>();
        formStatusLabel = new javax.swing.JLabel();
        formStatusBox = new javax.swing.JComboBox<>();
        buttonPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 500));

        logoPanel.setLayout(new java.awt.BorderLayout());
        logoPanel.add(logoLabel, java.awt.BorderLayout.CENTER);

        titlePanel.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Search ID to Edit :");
        jPanel2.add(jLabel1);

        searchTextField.setColumns(15);
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });
        jPanel2.add(searchTextField);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel2.add(searchButton);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        formGridPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Doctor Information :", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Corbel", 1, 14))); // NOI18N
        formGridPanel.setMinimumSize(new java.awt.Dimension(350, 228));
        formGridPanel.setPreferredSize(new java.awt.Dimension(300, 270));
        formGridPanel.setLayout(new java.awt.GridLayout(6, 2, 5, 15));

        formDocIDlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        formDocIDlabel.setText("ID :");
        formGridPanel.add(formDocIDlabel);

        formDocIDfield.setEditable(false);
        formDocIDfield.setColumns(15);
        formGridPanel.add(formDocIDfield);

        formNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        formNameLabel.setText("Name :");
        formGridPanel.add(formNameLabel);

        formNameInput.setColumns(15);
        formGridPanel.add(formNameInput);

        formAgeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        formAgeLabel.setText("Age :");
        formGridPanel.add(formAgeLabel);

        formAgeInput.setColumns(15);
        formGridPanel.add(formAgeInput);

        formPhoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        formPhoneLabel.setText("Phone :");
        formGridPanel.add(formPhoneLabel);

        formPhoneInput.setColumns(15);
        formGridPanel.add(formPhoneInput);

        formPositionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        formPositionLabel.setText("Position :");
        formGridPanel.add(formPositionLabel);

        formPositionBox.setPreferredSize(new java.awt.Dimension(100, 29));
        formGridPanel.add(formPositionBox);

        formStatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        formStatusLabel.setText("Status :");
        formGridPanel.add(formStatusLabel);

        formStatusBox.setPreferredSize(new java.awt.Dimension(100, 29));
        formGridPanel.add(formStatusBox);

        formWrapperPanel.add(formGridPanel);

        jPanel1.add(formWrapperPanel, java.awt.BorderLayout.CENTER);

        titlePanel.add(jPanel1, java.awt.BorderLayout.CENTER);

        logoPanel.add(titlePanel, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(logoPanel, java.awt.BorderLayout.PAGE_START);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(saveButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_END);
        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // Ensure a doctor has been successfully found before saving
        if (this.doctorToEdit != null) {
            try {
                // Get the new values from the form fields
                String newName = formNameInput.getText().trim();
                int newAge = Integer.parseInt(formAgeInput.getText().trim());
                String newPhone = formPhoneInput.getText().trim();
                String newPosition = (String) formPositionBox.getSelectedItem();
                String newStatus = (String) formStatusBox.getSelectedItem();

                // Validate that the name is not empty
                if (newName.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Doctor name cannot be empty.");
                    return;
                }

                if (newAge < 23 || newAge > 80) {
                    JOptionPane.showMessageDialog(this, "Please enter a realistic age for a doctor (23-80).", "Invalid Age", JOptionPane.ERROR_MESSAGE);
                    return; // Stop the save process
                }
                
                String phoneRegex = "^(\\+?6?01)[0-9]{7,9}$";
                if (!Pattern.matches(phoneRegex, newPhone)) {
                    JOptionPane.showMessageDialog(this, "Please enter a valid Malaysian mobile number (e.g., 0123456789).", "Invalid Phone Number", JOptionPane.ERROR_MESSAGE);
                    return; // Stop the save process
                }

                // Update the original Doctor object directly.
                // This works because doctorToEdit is a reference to the object in the master list.
                doctorToEdit.setName(newName);
                doctorToEdit.setAge(newAge);
                doctorToEdit.setPhoneNumber(newPhone);
                doctorToEdit.setPosition(newPosition);
                doctorToEdit.setStatus(newStatus);

                JOptionPane.showMessageDialog(this, "Doctor information updated successfully.");
                FileUtils.writeDataToFile("doctors", masterDoctorList);
                this.dispose(); // Close the dialog

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid number for age.");
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose(); // Simply close the dialog
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String idToFind = searchTextField.getText().trim().toUpperCase();
        if (idToFind.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a Doctor ID to find.");
            return;
        }

        // 1. You MUST sort the list by ID first for binary search to work
        masterDoctorList.sort();

        // 2. Create a "dummy" Pair with the key to search for
        Pair<String, Doctor> keyToFind = new Pair<>(idToFind, null);

        // 3. Perform the binary search
        Pair<String, Doctor> foundPair = masterDoctorList.binarySearch(keyToFind);

        if (foundPair != null) {
            // 4. If found, store the doctor and populate the form fields
            this.doctorToEdit = foundPair.getValue();

            formDocIDfield.setText(doctorToEdit.getDoctorID());
            formNameInput.setText(doctorToEdit.getName());
            formAgeInput.setText(String.valueOf(doctorToEdit.getAge()));
            formPhoneInput.setText(doctorToEdit.getPhoneNumber());
            formPositionBox.setSelectedItem(doctorToEdit.getPosition());
            formStatusBox.setSelectedItem(doctorToEdit.getStatus());

            // 5. Enable the form fields and "Save" button
            setFieldsEditable(true);

        } else {
            JOptionPane.showMessageDialog(this, "Doctor with ID '" + idToFind + "' not found.");
            // Clear the form and keep fields disabled
            formDocIDfield.setText("");
            formNameInput.setText("");
            formAgeInput.setText("");
            formPhoneInput.setText("");
            formPositionBox.setSelectedIndex(0);
            formStatusBox.setSelectedIndex(0);
            this.doctorToEdit = null;
            setFieldsEditable(false);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField formAgeInput;
    private javax.swing.JLabel formAgeLabel;
    private javax.swing.JTextField formDocIDfield;
    private javax.swing.JLabel formDocIDlabel;
    private javax.swing.JPanel formGridPanel;
    private javax.swing.JTextField formNameInput;
    private javax.swing.JLabel formNameLabel;
    private javax.swing.JTextField formPhoneInput;
    private javax.swing.JLabel formPhoneLabel;
    private javax.swing.JComboBox<String> formPositionBox;
    private javax.swing.JLabel formPositionLabel;
    private javax.swing.JComboBox<String> formStatusBox;
    private javax.swing.JLabel formStatusLabel;
    private javax.swing.JPanel formWrapperPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPanel logoPanel;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables
}
